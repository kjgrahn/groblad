#!/usr/bin/perl -w # -*- perl -*-
#
# kärlvl - extract data from http://www.nrm.se/fbo/chk/
#          Checklista över Nordens kärlväxter
#          Thomas Karlsson,
#          Naturhistoriska riksmuseet
# 
# $Id: kärlvl,v 1.9 2010-04-05 14:33:31 grahn Exp $
# 
# Copyright (c) 2004, 2010 Jörgen Grahn
# All rights reserved.

# All this assumes that the format doesn't change, of course.  But it
# seems to be generated by something, and so should stay constant.
#
# the weird pseudo-hidden-zeros convention seems to be
# 000000 hybrids (mostly, also the only seven forms, f.)
# 0000   var. and some 'trade names'
# 00     subsp. and one 'trade name'
#
# - Status letters are "abt?-+ ".
#
# The taxonomic order is the obvious one: 1, 1b, 2, ...
# setenv LC_COLLATE C
# ls -1 falat* | sort -k1.6 -n |xargs ./kärlvl
#
#

use strict;

sub out($$$) {
    my ($stat, $sv, $lat) = @_;

    return if $stat =~ /[?-]/;

    if(defined $sv) {
	printf "%-22s (%s)\n", $sv, $lat;
    }
    else {
	printf "%-22s  %s\n", '', $lat;
    }
}

my ($genus, $species, $ssp);

while(<>) {

    next if /^0$/;
    next if /^\s*$/;
    next if /^\s+Till\s/;

    s/^([ ?+abt-])\s*//;
    my $stat = $1;

    if(/^([A-Z]\S+)/) {
	$genus = $1;

	# family, not genus?
	print "\n\# $genus\n" if $genus =~ /ceae$/;
	next;
    }

    my $sv = $1 if s/\s{3,}(\S.+)$//;

    # kill authors
    s/\s+[A-Z\(].+$//;

    s/subsp\./ssp./g;

    if(/^([a-z×].+)/) {
	($species, $ssp) = ($1, undef);
	out $stat, $sv, "$genus $species";
	next;
    }

    if(/^00ssp\. ([a-z×].+)/) {
	($species, $ssp) = ($species, $1);
	out $stat, $sv, "$genus $species ssp. $ssp";
 	next;
    }

    if(/^0000var\. ([a-z].+)/) {
	my $var = $1;
	my $lat;
	if(defined $ssp) {
	    $lat = "$genus $species ssp. $ssp var. $var";
	}
	else {
	    $lat = "$genus $species var. $var";
	}
	out $stat, $sv, $lat;
 	next;
    }

    if(/^000000f\. ([a-z].+)/) {
	my $form = $1;
	out $stat, $sv, "$genus $species f. $form";
 	next;
    }

    if(/^000000(.+)/) {
	my $names = $1;
	out $stat, $sv, "$genus $names";
 	next;
    }

    # print "xxx $_";
}

__END__
